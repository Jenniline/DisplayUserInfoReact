{"version":3,"sources":["components/FormUserDetails.js","components/UserInfo.js","components/Success.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","back","prevStep","event","console","log","this","state","selectedOption","values","handleChange","Fragment","title","onSubmit","formSubmit","hintText","floatingLabelText","onChange","defaultValue","Username","idcardnumber","Email","Symptoms","Present_Location","Previous_Location","label","primary","style","styles","button","onClick","Component","margin","UserInfo","List","primaryText","secondaryText","Success","signOut","localStorage","clear","window","location","href","SignIn","step","setState","input","target","value","App","className","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5454815a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\n\nexport class FormUserDetails extends Component {\n\n    //continue method for continue button\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n    //back method for back button\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n\n    //method to submit form\n    formSubmit(event) {\n        event.preventDefault();\n        console.log(this.state.selectedOption)\n      }\n\n\n\n\n    render() {\n        const {values,handleChange } = this.props;\n\n        return (\n\n\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Insert Information\"/>\n\n                <form onSubmit={this.formSubmit} >    \n                    <TextField\n                    hintText=\"Enter your User Name\"\n                    floatingLabelText=\"Username\"\n                    onChange={handleChange('Username')}\n                    defaultValue={values.Username}\n                    />\n\n                       <br/>\n\n                    <TextField\n                    hintText=\"Enter your ID CARD NUMBER\"\n                    floatingLabelText=\"Id Card Number\"\n                    onChange={handleChange('idcardnumber')}\n                    defaultValue={values.idcardnumber}\n                    />\n\n\n                       <br />\n\n                       <TextField\n                    hintText=\"Email\"\n                    floatingLabelText=\"Email\"\n                    onChange={handleChange('Email')}\n                    defaultValue={values.Email}\n                    />\n\n                    <br/>\n\n                    <h2>Symptoms</h2>\n\n\n                    <TextField\n                        hintText=\"Symptoms\"\n                        floatingLabelText=\" Symptoms\"\n                        onChange={handleChange('Symptoms')}\n                        defaultValue={values.Symptoms}       \n                    />\n\n                    <br/>\n\n                    <TextField\n                             hintText=\"Symptoms\"\n                            floatingLabelText=\"Symptoms\"\n                            onChange={handleChange('Symptoms')}\n                            defaultValue={values.Symptoms}    \n                    />\n\n                    <br/>\n\n                    <h4>LOCATION</h4>\n\n                    <TextField\n                        hintText=\"Present Location\"\n                        floatingLabelText=\"Present Location\"\n                        onChange={handleChange('Present_Location')}\n                        defaultValue={values.Present_Location }       \n                    />\n\n                    <br/>\n\n                    <TextField\n                        hintText=\"Previous Location\"\n                        floatingLabelText=\"Previous Location\"\n                        onChange={handleChange('Previous_Location')}\n                        defaultValue={values.Previous_Location }       \n                    />\n\n                        <br/>\n\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue} //what does continue do? It calls nextStep\n                    />\n\n                </form>\n\n                </React.Fragment>\n            </MuiThemeProvider>\n        );   \n    }\n}\n\nconst styles = {\n    button:{\n        margin:15\n    }\n}\n\nexport default FormUserDetails;","import React, { Component } from 'react'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport {List, ListItem} from 'material-ui/List';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\n\nexport class UserInfo extends Component {\n    continue = e => {   \n        e.preventDefault();\n        //PROCESS YOUR FORM // This is whare you send information to you API for processing\n        this.props.nextStep();\n    };\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    //Now we want to pull out all the values since values are in the props\n\n\n\n    render() {\n        const {values: {Username,idcardnumber,Email,Symptoms,Present_Location, Previous_Location}} = this.props;\n\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"User Information\"/>\n\n                <List>\n\n                        //For user name\n                    <ListItem\n                        primaryText=\"User Name\"\n                        secondaryText={ Username }\n                    />\n\n                    <ListItem\n                        primaryText=\"ID CARD NUMBER\"\n                        secondaryText={ idcardnumber }\n                    />\n                    \n\n                    <ListItem\n                        primaryText=\"Email\"\n                        secondaryText={ Email }\n                    />\n\n                    <ListItem\n                        primaryText=\"Symptoms\"\n                        secondaryText={ Symptoms }\n                    />\n\n                    //For Symptoms\n                    <ListItem\n                        primaryText=\"Symptoms\"\n                        secondaryText={ Symptoms }\n                    />\n\n                    <ListItem\n                        primaryText=\"Present Location\"\n                        secondaryText={ Present_Location }\n                    />\n\n                    <ListItem\n                        primaryText=\" Previous Location\"\n                        secondaryText={ Previous_Location}\n                    />\n\n\n\n\n                </List>\n\n                    <br/>\n\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue} //what does continue do? It calls nextStep\n                    />\n\n\n\n                    <RaisedButton\n                        label=\"UPDATE\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.back} //what does continue do? It calls nextStep\n                    />\n\n                </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\n\nconst styles = {\n    button:{\n        margin:15\n    }\n}\n\nexport default UserInfo","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n\nexport class Success extends Component {\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    signOut = e =>{\n        e.preventDefault();\n\n         localStorage.clear();\n         window.location.href='/'\n    }\n\n\n    render() {\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Confirmation\"/>\n                    \n                   <h1>Thanks for your cooperation you can Sign Out \n                       <br /> \n                       If you wish\n                   </h1>\n\n                        <br/>\n\n                    <RaisedButton\n                        label=\"Sign Out\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.signOut} //what does continue do? It calls nextStep\n                    />\n\n                   \n\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst styles = {\n    button:{\n        margin:15\n    }\n}\n\nexport default Success\n","import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';    \n//import FormPersonalDetails from './FormPersonalDetails';\nimport UserInfo from './UserInfo';\nimport Success from './Success'\n\n\nexport class SignIn extends Component {\n//methods here\n        state = {\n            step:1,\n            Username:'',\n            idcardnumber:'',\n            Email:'', \n          Symptoms:'',\n          Present_Location:'',\n          Previous_Location:''        \n         }\n\n\n         //Proceed to next step\n\n        nextStep = () => {\n            const {step} = this.state;\n            this.setState({ \n                step: step + 1\n            });\n        }\n\n        //Go back to previous step\n        \n        prevStep = () => {\n            const {step} = this.state;\n            this.setState({ \n                step: step - 1\n            });\n        }\n\n         //Handle fields change \n         handleChange = input => e =>{\n            this.setState({[input]: e.target.value}); \n        }\n\n\n\n//end of the methods now we go to the render\n\n    render() {\n\n        const {step} = this.state;\n        const {Username,idcardnumber,Email,Symptoms,Present_Location,Previous_Location} = this.state;\n        const values = {Username,idcardnumber,Email,Present_Location,Previous_Location};\n\n        switch (step) {\n            case 1:\n                return (\n                    <FormUserDetails\n                    nextStep = {this.nextStep}\n                    handleChange= {this.handleChange}\n                    values={values}\n                    />\n                )\n                case 2: \n                    return(\n                        <UserInfo\n                        nextStep = {this.nextStep}\n                        prevStep = {this.prevStep}     \n                        values={values}\n                        />\n                    )\n                case 3  :\n                    return (<Success \n                    prevStep = {this.prevStep}     \n                        values={values}\n                    />\n                    )\n        }\n\n    }\n}\n\nexport default SignIn\n","import React, { Component } from 'react';\nimport { SignIn } from './components/SignIn'\nimport './App.css';\n\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <SignIn />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}